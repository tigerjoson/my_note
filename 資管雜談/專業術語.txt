ref:https://nodejust.com/devops-introduction-case-study/
DevOps 介紹：概念與案例
這個字是由 ” Development ” 與 ” Operations ” 合併而成。
目的是要透過強調溝通 ( Communication ) 、合作 ( Collaboration ) 、整合 ( 
Integration ) 及自動化 ( Automation ) 等方式加強開發人員 ( Developers ) 與運維人員 ( 
Technology Operators ) 還有其他包括質量控制等人員之間的合作。

DevOps 是軟體開發方法與概念。很多人將之歸類於敏捷軟體開發 ( Agile Software Development ) 
的領域裡面，這是可以理解的，因為 DevOps 的最終目的也是要快速、頻繁地發佈軟體 ( Delivery ) 
。 DevOps 希望通過更好的跨部門合作以及自動化來實現這一目標。
上面提到的四個方式其實可以分成兩類：溝通合作是一類，整合自動化是另一類。
籠統來說，這兩個類別就是 DevOps 的核心。其中技術(工具)主要解決整合與自動化的部份。
--------------------------------------------------------------------------
自動化佈署方案有幾個主流 Puppet、Chet、Ansible、Salt … etc，
----------------------------------------------------------------------------------
			DDL、DML、DCL、DQL
資料定義語言：
	DDL(Data Definition Language)
	用來定義資料庫、資料表、檢視表、索引、預存程序、觸發程序、函數等資料庫物件。
	可以用來建立、更新、刪除 table,schema,domain,index,view

常見的指令有：
	CREATE 建立資料庫的物件
	ALTER 變更資料庫的物件
	DROP 刪除資料庫的物件

資料操作語言：
	DML(Data Manipulation Language)，用來處理資料表裡的資料。

常見的指令有：
	INSERT 新增資料到資料表中
	UPDATE 更改資料表中的資料
	DELETE 刪除資料表中的資料

資料控制語言：
	DCL(Data Control Language)，用來控制資料表、檢視表之存取權限，提供資料庫的安全性。

常見的指令有：
	GRANT 賦予使用者使用權限
	REVOKE 取消使用者的使用權限
	COMMIT 完成交易作業
	ROLLBACK 交易作業異常，將已變動的資料回復到交易開始的狀態

資料查詢語言：
	DQL(Data Query Language):
	負責進行資料查詢，不會對資料本身進行修改的語句，用來查詢資料表裡的資料。

指令只有一個：
	SELECT 選取資料庫中的資料
各類輔助指令：SELECT,FROM,WHERE,GROUP BY,ORDER BY

用來定義資料庫、資料表、檢視表、索引、預存程序、觸發程序、函數等資料庫物件。常見的指令有：
	CREATE 建立資料庫的物件
	ALTER 變更資料庫的物件
	DROP 刪除資料庫的物件
